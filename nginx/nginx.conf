events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  client_max_body_size 20m;

  server {
    listen 80;
    server_name yafoxin.ru;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name yafoxin.ru;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /usr/share/nginx/html;
    index index.html;

    # SPA fallback: serve static if exists, else index.html (no loops)
    location / {
      try_files $uri $uri/ /index.html;
    }
    # Make sure index.html is served once and not cached aggressively
    location = /index.html {
      add_header Cache-Control "no-store";
    }

    location /media/ {
      alias /usr/share/nginx/media/;
      add_header Cache-Control "public, max-age=86400";
    }

    location /api/ {
      # Preserve original URI (/api/...) when proxying to backend
      proxy_pass http://backend:8000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;
    }
  }
}
